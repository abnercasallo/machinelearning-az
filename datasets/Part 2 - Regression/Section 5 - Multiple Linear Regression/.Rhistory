library(RSelenium)
library(wdman)
library(rJava)
url<-"https://www.latlong.net/"
#Creamos una variable que nos permita entrar al browser, con rsDriver abrimos una ventana.
#A diferencia del remoteDriver el rsDriver requiere que tengas al rJava instalado (por ende el Java).
driver <- rsDriver(browser=c("internet explorer"), chromever="latest",version = "latest") #Abriremos con este navegador, phantomjs permite a todos
driver <- rsDriver(browser=c("Chrome"), chromever="latest",version = "latest") #Abriremos con este navegador, phantomjs permite a todos
driver <- rsDriver(browser=c("chrome"), chromever="latest",version = "latest") #Abriremos con este navegador, phantomjs permite a todos
#A diferencia del remoteDriver el rsDriver requiere que tengas al rJava instalado (por ende el Java).
driver <- rsDriver(browser=c("chrome"), chromever="latest",version = "latest") #Abriremos con este navegador, phantomjs permite a todos
#En caso de Chrome podemos encontrar la versiÃ³n con:
#binman::list_versions("chromedriver")
remDr$close()
rm(rD)
gc()
driver <- rsDriver(browser=c("chrome"), chromever="latest",version = "latest") #Abriremos con este navegador, phantomjs permite a todos
driver <- rsDriver(port=4567L,browser=c("chrome"), chromever="latest",version = "latest") #Abriremos con este navegador, phantomjs permite a todos
driver <- rsDriver(browser=c("chrome"),port=4567L, chromever="latest",version = "latest") #Abriremos con este navegador, phantomjs permite a todos
driver <-rsDriver(browser = "chrome", port = 4567L, geckover = NULL,
chromever =  "latest", iedrver = NULL,
phantomver = NULL, extraCapabilities = cprof)
driver <-rsDriver(browser = "chrome", port = 4567L, geckover = NULL,
chromever =  "latest", iedrver = NULL,
phantomver = NULL
driver <-rsDriver(browser = "chrome", port = 4567L, geckover = NULL,
chromever =  "latest", iedrver = NULL,
phantomver = NULL)
remDr$close()
driver$server$stop()
rm(driver)
gc()
remdriver$close()
driver$server$stop()
rm(driver)
gc()
driver$close()
driver$server$stop()
rm(driver)
gc()
load("D:/Git Hub-BEST/contrataciones-estado-emergencia/Data/workspace_ruc.RData")
trabajadores10
trabajadores10<-data.frame(Trabajadores = unlist(trabajadores10))
trabajadores10
View(trabajadores10)
load("D:/Git Hub-BEST/contrataciones-estado-emergencia/Data/sanciones_scrap.RData")
library(tidyverse)  #Usaremos en tibble
library(readxl)
library(xml2)  #Para leer html.
library(rvest)
library(RSelenium)  #Pra trabajar con páginas dinámicas
library(wdman)    #Navegador fantasma, permite usar rsDriver
library(robotstxt)
#library(strip)
library(gdata)
#WEB SCRAPING
server<-phantomjs(port=5015L)
sanciones12<-sapply(data12$RUCPROV,sanciones)
sanciones13<-sapply(data13$RUCPROV,sanciones)
#WEB SCRAPING
server<-phantomjs(port=5015L)
#Sys.sleep(8)
scrap<-function(ruc) {
if(nchar(ruc)!=11){a<-NA}
else{
UrlMadre<-paste0("https://apps.osce.gob.pe/perfilprov-ui/estadistica/",ruc,"#inhabMJ")
paths_allowed(paths = c(UrlMadre)) # TRUE
options(encoding = "utf-8")
Browser <- remoteDriver(browserName = "phantomjs", port=5015L) #browserName = "edge"
Sys.sleep(5)
Browser$open()
Sys.sleep(5)
Browser$navigate(paste(UrlMadre))#,RUCs[1],"#sanciones")) #AQUÍ SALE EL ERROR
Sys.sleep(5)
Browser$screenshot(display=TRUE)
Sys.sleep(5)
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]])  #Por el "xml2"
PaginaRUC<-read_html(Pagina_actual[[1]])
pag_text<-PaginaRUC%>%
html_nodes(css= ".data-container")%>%
html_text()
pag_text}
}
#DEFINIMOS FUNCIONES
sanciones<- function(ruc){
text<-scrap(ruc)
if (is.na(text)){a<-NA} else{
sanciones<-str_match(text, "Sanciones del TCE (\\s*(.*?)\\s*)El proveedor") #tidyverse
sanciones<-strsplit(sanciones, "")
sanciones <-as.numeric(sanciones[[2]][2])
sanciones}}
penalidades<- function(ruc){
text<-scrap(ruc)
penalidades<-str_match(text, "Penalidades (\\s*(.*?)\\s*)El proveedor") #tidyverse
penalidades<-strsplit(penalidades, "")
penalidades<-as.numeric(penalidades[[2]][2])
penalidades}
sanciones13<-sapply(data13$RUCPROV,sanciones)
# b<-penalidades(RUCs[1])
# b
#sanciones0<-sapply(data0$RUCPROV,sanciones)
13*40
penalidades<- function(ruc){
text<-scrap(ruc)
penalidades<-str_match(text, "Penalidades (\\s*(.*?)\\s*)El proveedor") #tidyverse
penalidades<-strsplit(penalidades, "")
penalidades<-as.numeric(penalidades[[2]][2])
penalidades}
##################################################
######################PENALIDADES#################
penalidades1<-sapply(data1$RUCPROV,penalidades)
#Sys.sleep(8)
scrap<-function(ruc) {
if(nchar(ruc)!=11){a<-NA}
else{
UrlMadre<-paste0("https://apps.osce.gob.pe/perfilprov-ui/estadistica/",ruc,"#inhabMJ")
paths_allowed(paths = c(UrlMadre)) # TRUE
options(encoding = "utf-8")
Browser <- remoteDriver(browserName = "phantomjs", port=5015L) #browserName = "edge"
Sys.sleep(5)
Browser$open()
Sys.sleep(5)
Browser$navigate(paste(UrlMadre))#,RUCs[1],"#sanciones")) #AQUÍ SALE EL ERROR
Sys.sleep(5)
Browser$screenshot(display=TRUE)
Sys.sleep(5)
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]])  #Por el "xml2"
PaginaRUC<-read_html(Pagina_actual[[1]])
pag_text<-PaginaRUC%>%
html_nodes(css= ".data-container")%>%
html_text()
pag_text}
}
#WEB SCRAPING
server<-phantomjs(port=5015L)
##################################################
######################PENALIDADES#################
penalidades1<-sapply(data1$RUCPROV,penalidades)
penalidades2<-sapply(data2$RUCPROV,penalidades)
penalidades3<-sapply(data3$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades2<-sapply(data2$RUCPROV,penalidades)
penalidades3<-sapply(data3$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades3<-sapply(data3$RUCPROV,penalidades)
penalidades4<-sapply(data4$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades4<-sapply(data4$RUCPROV,penalidades)
save.image("D:/Git Hub-BEST/contrataciones-estado-emergencia/Data/sanciones_scrap.RData")
install.packages("ltsa")
library(ltsa)
ARpol <- 0.4
MApol <- c(-1.1,0.3)
tacvfARMA(phi = ARpol, theta = -MApol, maxLag = 0)
ARMAacf(c(1.0, -0.25), 1.0, lag.max = 10)
zapsmall(ARMAacf(c(1.0, -0.25), lag.max = 10, pacf = TRUE))
ARMAacf(c(1.0, -0.25), 1.0, lag.max = 10, pacf = TRUE)
stopifnot(all.equal(unname(A.n), c(1, a.n)))
n <- 1:10
a.n <- 2^(-n) * (32/3 + 8 * n) /(32/3)
(A.n <- ARMAacf(c(1.0, -0.25), 1.0, lag.max = 10))
stopifnot(all.equal(unname(A.n), c(1, a.n)))
ARMAacf(c(1.0, -0.25), 1.0, lag.max = 10)
set.seed(170)
x <- arima.sim(model = list(ar = c(0.2, -0.1), ma = 0.1), n = 230)
ts.plot(x)
acf2(x)
set.seed(170)
x <- arima.sim(model = list(ar = c(0.2, -0.1), ma = 0.1), n = 230)
ts.plot(x)
acf2(x)
acf(x)
ARMA12_fit <- sarima(x, p=1, d=0, q=2)
install.packages("sarima")
ARMAacf(ar = 0.4, ma = c(-1.1,0.3), lag.max = r, pacf = FALSE)
ARMAacf(ar = 0.4, ma = c(-1.1,0.3), pacf = FALSE)
ARMAacf(c(1.0, -0.25), 1.0, lag.max = 10)
ARMAacf(ar = 0.4, ma = c(-1.1,0.3), lag.max = 8, pacf = FALSE)
ARMAacf(ar = 0.4, ma = c(-1.1,0.3), lag.max = 2, pacf = FALSE)
ARMAacf(ar = 0.4, ma = c(-1.1,0.3), lag.max = 8, pacf = FALSE)
x <- arma.sim(model = list(ar = 0.4, c(-1.1,0.3)), n = 230)
x <- arima.sim(model = list(ar = 0.4, c(-1.1,0.3)), n = 230)
ts.plot(x)
acf(x)
acf(x,lag.max = 10)
acf(x,lag.max = 8)
acf(ar = 0.4, ma = c(-1.1,0.3), lag.max = 8, pacf = FALSE)
zapsmall(ARMAacf(c(1.0, -0.25), lag.max = 10, pacf = TRUE))
x <- arima.sim(model = list(ar = 0.4, d=0, c(-1.1,0.3)), n = 230)
ts.plot(x)
acf(x,lag.max = 8)
x <- arima.sim(model = list(ar = 0.4, d=0, ma=c(-1.1,0.3)), n = 230)
ts.plot(x)
acf(x,lag.max = 8)
pacf(x,lag.max = 8)
set.seed(170)
x <- arima.sim(model = list(ar = 0.4, d=0, ma=c(-1.1,0.3)), n = 230)
ts.plot(x)
acf(x,lag.max = 8)
pacf(x,lag.max = 8)
set.seed(200)
x <- arima.sim(model = list(ar = 0.4, d=0, ma=c(-1.1,0.3)), n = 230)
ts.plot(x)
acf(x,lag.max = 8)
pacf(x,lag.max = 8)
#ts.plot(x)
acf(x,title="x",lag.max = 8)
x <- arima.sim(model = list(ar = 0.4, d=0, ma=c(-1.1,0.3)), n)
#ts.plot(x)
acf(x,title="x",lag.max = 8)
pacf(x,lag.max = 8)
n<-set.seed(200)
x <- arima.sim(model = list(ar = 0.4, d=0, ma=c(-1.1,0.3)), n)
x <- arima.sim(model = list(ar = 0.4, d=0, ma=c(-1.1,0.3)), n=200)
#ts.plot(x)
acf(x,title="x",lag.max = 8)
pacf(x,lag.max = 8)
plotacfthemp(n, ar = 0.4, ma=c(-1.1,0.3), lag.max = 8, titre="")
installs.package(plotacfthemp)
installs.package("plotacfthemp")
install.package("plotacfthemp")
install.packages("plotacfthemp")
ACF <- arima.sim(model = list(ar = 0.4, d=0, ma=c(-1.1,0.3)), n=200)
#ts.plot(x)
acf(ACF,lag.max = 8)
PACF <- arima.sim(model = list(ar = 0.4, d=0, ma=c(-1.1,0.3)), n=200)
pacf(PACF,lag.max = 8)
x <- arima.sim(model = list(ar = 0.4, d=0, ma=c(-1.1,0.3)), n=200)
#ts.plot(x)
acf(x,lag.max = 8)
pacf(x,lag.max = 8)
#ts.plot(x)
acf(x,lag.max = 8)
pacf(x,lag.max = 8)
#ts.plot(x)
acf(x,lag.max = 8)
pacf(x,lag.max = 8)
library(shinydashboard)
ui<-dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) {
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui<-dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) {
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui<-dashboardPage(
# dashboardHeader(),
# dashboardSidebar(),
# dashboardBody()
)
server <- function(input, output) {
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui<-dashboardPage(
)
server <- function(input, output) {
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui<-dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) {
}
shinyApp(ui, server)
# Regresión Lineal Múltiple
setwd("D:/Git Hub-BEST/machinelearning-az/datasets/Part 2 - Regression/Section 5 - Multiple Linear Regression")
# Importar el dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
shiny::runApp('D:/Git Hub-BEST/contrataciones-estado-emergencia/App-1')
